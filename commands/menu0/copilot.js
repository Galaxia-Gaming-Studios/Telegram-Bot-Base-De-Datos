const fs = require('fs');
const path = require('path');
const axios = require('axios');

module.exports = (bot) => {
    bot.command('copilot', async (ctx) => {
        try {
            const args = ctx.message.text.split(' ').slice(1);
            
            if (args.length === 0) {
                ctx.reply('üèÆ Tienes que hacer una pregunta despu√©s del comando. Ejemplo: /copilot ¬øEres mujer?');
                return;
            }

            let userPregunta = args.join(' '); // Recoge la pregunta del usuario
            const url = `https://deliriusapi-official.vercel.app/ia/bingia?query=${encodeURIComponent(userPregunta)}`;
            const response = await axios.get(url);

            if (response.data.status) {
                // Ruta a la carpeta de fotos, videos y GIFs
                const mediaDir = path.join(__dirname, '../../file/menu0/copilot');

                // Obtener todos los archivos de la carpeta
                const files = fs.readdirSync(mediaDir);

                // Seleccionar un archivo al azar
                const randomFile = files[Math.floor(Math.random() * files.length)];

                // Ruta completa al archivo seleccionado
                const filePath = path.join(mediaDir, randomFile);

                // Determinar si es una imagen, video o GIF por la extensi√≥n
                const isVideo = filePath.endsWith('.mp4') || filePath.endsWith('.mkv') || filePath.endsWith('.avi');
                const isGif = filePath.endsWith('.gif');

                // Crear botones
                const buttons = {
                    reply_markup: {
                        inline_keyboard: [
                            [{ text: 'Regresar al men√∫', callback_data: 'menu2' }]
                        ]
                    }
                };

                // Crear leyenda (caption) para la multimedia
                const caption = `*Copilot*
*‚ö†Ô∏èL√≠mite 100 Palabras*
üé±Preguntaü§î: 
*${userPregunta}* 
üí¨Respuestaü§ñ: 
*${response.data.message || 'Sin respuesta'}*

*Colaborador*
[‚ù¶‚îï·¥°·¥Ä…™“ì·¥ú ‚≠ê ô·¥è·¥õ‚ä°‚ù•](https://chat.whatsapp.com/BcTvQlXoNBLJPMJjbtdElS)`;

                // Enviar el archivo multimedia seg√∫n el tipo
                if (isVideo) {
                    await ctx.replyWithVideo({ source: filePath }, { caption, parse_mode: 'Markdown', ...buttons });
                } else if (isGif) {
                    await ctx.replyWithAnimation({ source: filePath }, { caption, parse_mode: 'Markdown', ...buttons });
                } else {
                    await ctx.replyWithPhoto({ source: filePath }, { caption, parse_mode: 'Markdown', ...buttons });
                }

            } else {
                ctx.reply('üç´ Copilot no pudo procesar su mensaje.');
            }

        } catch (error) {
            console.error('Hubo un error:', error);
            ctx.reply('‚òî Ocurri√≥ un error al procesar su solicitud.');
        }
    });

    // Acci√≥n del bot√≥n "menu2" - Redirigir al men√∫ principal
    bot.action('menu2', (ctx) => {
        ctx.reply('Has regresado al men√∫ principal.');
        ctx.answerCbQuery(); // Responder a la acci√≥n del bot√≥n
    });
};